// Generated by gencpp from file ite_info/orienteering.msg
// DO NOT EDIT!


#ifndef ITE_INFO_MESSAGE_ORIENTEERING_H
#define ITE_INFO_MESSAGE_ORIENTEERING_H

#include <ros/service_traits.h>


#include <ite_info/orienteeringRequest.h>
#include <ite_info/orienteeringResponse.h>


namespace ite_info
{

struct orienteering
{

typedef orienteeringRequest Request;
typedef orienteeringResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct orienteering
} // namespace ite_info


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ite_info::orienteering > {
  static const char* value()
  {
    return "ffbcdd3dc3366e66f5b763eb8c56d7ca";
  }

  static const char* value(const ::ite_info::orienteering&) { return value(); }
};

template<>
struct DataType< ::ite_info::orienteering > {
  static const char* value()
  {
    return "ite_info/orienteering";
  }

  static const char* value(const ::ite_info::orienteering&) { return value(); }
};


// service_traits::MD5Sum< ::ite_info::orienteeringRequest> should match 
// service_traits::MD5Sum< ::ite_info::orienteering > 
template<>
struct MD5Sum< ::ite_info::orienteeringRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ite_info::orienteering >::value();
  }
  static const char* value(const ::ite_info::orienteeringRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ite_info::orienteeringRequest> should match 
// service_traits::DataType< ::ite_info::orienteering > 
template<>
struct DataType< ::ite_info::orienteeringRequest>
{
  static const char* value()
  {
    return DataType< ::ite_info::orienteering >::value();
  }
  static const char* value(const ::ite_info::orienteeringRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ite_info::orienteeringResponse> should match 
// service_traits::MD5Sum< ::ite_info::orienteering > 
template<>
struct MD5Sum< ::ite_info::orienteeringResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ite_info::orienteering >::value();
  }
  static const char* value(const ::ite_info::orienteeringResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ite_info::orienteeringResponse> should match 
// service_traits::DataType< ::ite_info::orienteering > 
template<>
struct DataType< ::ite_info::orienteeringResponse>
{
  static const char* value()
  {
    return DataType< ::ite_info::orienteering >::value();
  }
  static const char* value(const ::ite_info::orienteeringResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ITE_INFO_MESSAGE_ORIENTEERING_H
